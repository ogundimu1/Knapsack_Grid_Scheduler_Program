
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JSpinner;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.SpinnerNumberModel;


public class Main_Grid_Scheduler extends javax.swing.JFrame {
JFrame window;
Knapsack server;
int opt;
    /**
     * Creates new form Main_Grid_Scheduler
     */
    public Main_Grid_Scheduler() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        newAllocation = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        jLabel2.setText("jLabel2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Knapsack Grid Scheduler System");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(153, 204, 255));

        newAllocation.setBackground(new java.awt.Color(255, 255, 255));
        newAllocation.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        newAllocation.setText("New Allocation");
        newAllocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newAllocationActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton2.setText("Exit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("        Knapsack Grid Scheduler System");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(260, 260, 260))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(233, 233, 233)
                        .addComponent(newAllocation))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 461, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 84, Short.MAX_VALUE)
                .addComponent(newAllocation)
                .addGap(70, 70, 70)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(jButton2)
                .addGap(99, 99, 99))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setSize(new java.awt.Dimension(613, 530));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void newAllocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newAllocationActionPerformed
        // TODO add your handling code here:
       //this.dispose();
        //new Allocation().setVisible(true);
        
        newProblem();
    }//GEN-LAST:event_newAllocationActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    private void newProblem()
	{
		JSpinner svrSpin = new JSpinner(new SpinnerNumberModel(500, 100, 10000, 100));
                
		JSpinner cSpin = new JSpinner(new SpinnerNumberModel(5, 1, 20, 1));
		JPanel dpane = new JPanel(new GridLayout(2,2,5,5));
                
		dpane.add(new JLabel("Server Capacity"));
		dpane.add(svrSpin);
		dpane.add(new JLabel("Number of clients"));
		dpane.add(cSpin);
		String opts[] = {"Next","Cancel"};
		int result = JOptionPane.showOptionDialog(window, dpane, "Data Input", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE, null, opts, opts[0]);
		if(result != JOptionPane.OK_OPTION) return;
		int serverCap = ((SpinnerNumberModel)svrSpin.getModel()).getNumber().intValue();
		int clientCount = ((SpinnerNumberModel)cSpin.getModel()).getNumber().intValue();
		
		JTextField cltName[] = new JTextField[clientCount];
		JTextField cltWeight[] = new JTextField[clientCount];
		JSpinner pSpin[] = new JSpinner[clientCount];
		JPanel rpane = new JPanel(new GridLayout(clientCount + 1,3,5,5));
		rpane.add(new JLabel("Client Name"));
		rpane.add(new JLabel("Required Capacity"));
		rpane.add(new JLabel("Client Priority"));
		for(int i = 0;i < clientCount;i++){
			cltName[i] = new JTextField("Client " + (i + 1));
			rpane.add(cltName[i]);
			cltWeight[i] = new JTextField("50");
			rpane.add(cltWeight[i]);
			pSpin[i]  = new JSpinner(new SpinnerNumberModel(1, 1, 10, 1));
			rpane.add(pSpin[i]);
		}
		result = JOptionPane.showOptionDialog(window, new JScrollPane(rpane), "Client Data", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE, null, opts, opts[0]);
		if(result != JOptionPane.OK_OPTION) return;
		ArrayList<Item> iList = new ArrayList<Item>();
		for(int i = 0;i < clientCount;i++){
			Item it = new Item(i,cltName[i].getText(),((SpinnerNumberModel)pSpin[i].getModel()).getNumber().intValue(),Integer.parseInt(cltWeight[i].getText()));
			iList.add(it);
		}
		Knapsack k = new Knapsack(serverCap,iList);
		server = k;
		JOptionPane.showMessageDialog(window, "Items have been added to the database", "New Allocation", JOptionPane.INFORMATION_MESSAGE);
                String[] options = new String[] {"Breadth First", "Best First", "Dynamic"};
                opt = JOptionPane.showOptionDialog(window, "SELECT SCHEDULING ALGORITHM", "KNAPSACK SCHEDULER", JOptionPane.PLAIN_MESSAGE, JOptionPane.PLAIN_MESSAGE, null, options, options[0]);
                 
                actionPerformedd(opt);
           
	}
    public void actionPerformedd(int opt)
	{
            if (opt==0){
                showNode("Breadth First",bestFK(),server.maxWeight);
            }else if (opt==1){
                showNode("Best First",breadthFK(),server.maxWeight);
            }else if (opt==2){
                showKnapsack("Dynamic",dynamicK(),server.maxWeight);
            }
            
		
	}
	
    private Node bestFK()
	{
		Node n = null;
		
                if(server==null){
			JOptionPane.showMessageDialog(window, "No Items have been specified", "Error", JOptionPane.ERROR_MESSAGE);
		}else{
			BestFirstKnapsack sack = new BestFirstKnapsack(new Knapsack(server));
			n = sack.makeKnapSack();
		}
		return n;
	}
    private Node breadthFK()
	{
		Node n = null;
		
                if(server==null){
			JOptionPane.showMessageDialog(window, "No Items have been specified", "Error", JOptionPane.ERROR_MESSAGE);
		}else{
			BreadthFirstKnapsack sack1 = new BreadthFirstKnapsack(new Knapsack(server));
			n = sack1.makeKnapSack();
		}
		return n;
	}
	
       private Knapsack dynamicK()
	{
                Knapsack k = null;
                
                if(server==null){
			JOptionPane.showMessageDialog(window, "No Items have been specified", "Error", JOptionPane.ERROR_MESSAGE);
		}else{
			DynamicKnapsack sacky = new DynamicKnapsack(new Knapsack(server));
			k = sacky.makeKnapSack();
		}
		return k;
	}
    private void showNode(String title, Node n,int sc)
	{
		if(n == null) return;
		JPanel rPane = new JPanel(new BorderLayout(5,5));
		rPane.add(new JLabel(title,JLabel.CENTER),BorderLayout.PAGE_START);
		JTextArea txtBox = new JTextArea();
		int totWeight=0;
		for(Item i: n.items){
			txtBox.append(i + "\n");
			totWeight += i.weight;
		}
		rPane.add(new JScrollPane(txtBox),BorderLayout.CENTER);
		JPanel bPane = new JPanel(new GridLayout(3,1,5,5));
		bPane.add(new JLabel("Server Capacity: " + sc));
		bPane.add(new JLabel("Number of Items: " + n.items.size()));
		bPane.add(new JLabel("Total Weight: " + totWeight));
		rPane.add(bPane,BorderLayout.PAGE_END);
		JOptionPane.showMessageDialog(window,rPane, title, JOptionPane.PLAIN_MESSAGE);
	}
    
     private void showKnapsack(String title, Knapsack n,int sc)
	{
		if(n == null) return;
		JPanel rPane = new JPanel(new BorderLayout(5,5));
		rPane.add(new JLabel(title,JLabel.CENTER),BorderLayout.PAGE_START);
		JTextArea txtBox = new JTextArea();
		int totWeight=0;
		for(Item i: n.items){
			txtBox.append(i + "\n");
			totWeight += i.weight;
		}
		rPane.add(new JScrollPane(txtBox),BorderLayout.CENTER);
		JPanel bPane = new JPanel(new GridLayout(3,1,5,5));
		bPane.add(new JLabel("Server Capacity: " + sc));
		bPane.add(new JLabel("Number of Items: " + n.items.size()));
		bPane.add(new JLabel("Total Weight: " + totWeight));
		rPane.add(bPane,BorderLayout.PAGE_END);
		JOptionPane.showMessageDialog(window,rPane, title, JOptionPane.PLAIN_MESSAGE);
	}
  
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main_Grid_Scheduler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main_Grid_Scheduler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main_Grid_Scheduler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main_Grid_Scheduler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main_Grid_Scheduler().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton newAllocation;
    // End of variables declaration//GEN-END:variables
}
